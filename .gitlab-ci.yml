stages:
    - Pre-Build
    - Build
    - Post-Build
    - Deploy

# region global_settings ######################################################
cache:
    paths:
        - node_modules/
variables:
    DOCKER_DRIVER: overlay
# endregion global_settings ###################################################

# region job_templates ########################################################
.pre_build_base:
    stage: Pre-Build
    image: $DOCKER_REGISTRY/general/docker-images/node-docker:latest
    before_script:
        - npm install
    when: on_success
# endregion job_templates #####################################################

# region Pre-Build ############################################################
Test:
    extends: .pre_build_base
    script:
        - npm test
    artifacts:
        paths:
            - ./coverage/lcov.info
        expire_in: 1d
# endregion Pre-Build #########################################################

# region Build ################################################################
Build:
    stage: Build
    script:
        - docker login $DOCKER_REGISTRY --username $DOCKER_REPO_USER --password $DOCKER_REPO_PASS
        - docker build
          --build-arg DOCKER_REGISTRY
          -t $DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
          -t $DOCKER_REGISTRY/$CI_PROJECT_PATH:latest .
        - docker push $DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
        - docker push $DOCKER_REGISTRY/$CI_PROJECT_PATH:latest
    only:
        - master
    when: on_success
    after_script:
        - 'echo "Image SHA Tag : $CI_COMMIT_SHA"'
# endregion Build #############################################################

# region Post-Build ###########################################################
SonarQube Analyze:
    stage: Post-Build
    image: $DOCKER_REGISTRY/general/docker-images/sonar-scanner:latest
    script:
        - export PACKAGE_VERSION=$(node -pe 'require("./package.json").version')
        - export PROJECT_KEY="$(echo $CI_PROJECT_PATH | tr '/' ':')"
        - echo "Analyzing $PROJECT_KEY"
        - sonar-scanner
          -Dsonar.analysis.mode=publish
          -Dsonar.login="${SONARQUBE_USERNAME}"
          -Dsonar.password="${SONARQUBE_PASSWORD}"
          -Dsonar.projectKey="${PROJECT_KEY}"
          -Dsonar.projectName="${CI_PROJECT_NAME}"
          -Dsonar.projectVersion="${PACKAGE_VERSION}"
    only:
        - master
    dependencies:
        - Test
    when: on_success
# endregion Post-Build ########################################################

# region Deploy ###############################################################
Deploy:
    stage: Deploy
    image: $DOCKER_REGISTRY/general/docker-images/node-docker:latest
    script:
        - bash deploy/deploy.sh
    only:
        - master
# endregion Deploy ############################################################
